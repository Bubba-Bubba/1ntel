{
  description = "FLAKE - Marcus's NixOS configuration";

  inputs = {
    nixpkgs.url = "github:NixOS/nixpkgs/nixos-unstable";
    home-manager = {
      url = "github:nix-community/home-manager/release-23.05";
      inputs.nixpkgs.follows = "nixpkgs";
    };

    nixvim = {
      url = "github:nix-community/nixvim";
      inputs.nixpkgs.follows = "nixpkgs";
    };

    nix-index-database = {
      url = "github:Mic92/nix-index-database";
      inputs.nixpkgs.follows = "nixpkgs";
    };

    nix-alien.url = "github:thiagokokada/nix-alien";
    helix.url = "github:helix-editor/helix/23.05";
  };

  outputs = { self, nixpkgs, home-manager, nixvim, nix-alien, nix-index-database, ... } @inputs:
    let
      system = "x86_64-linux";
      homeManagerModules = [ 
        nixvim.homeManagerModules.nixvim
        nix-index-database.hmModules.nix-index
      ];
    in
    {
      nixosConfigurations = {
        My_Nix = nixpkgs.lib.nixosSystem {
          inherit system;
          specialArgs = inputs;

          # Your NixOS system configuration here
        };
      };

      nix-alien-desktop = nixpkgs.lib.nixosSystem {
        inherit system;
        specialArgs = { inherit self system; };

        modules = [
          ({ self, system, ... }: {
            environment.systemPackages = with self.inputs.nix-alien.packages.${system}; [
              nix-alien
            ];
            # Optional, needed for `nix-alien-ld`
            programs.nix-ld.enable = true;
          })
          ./configuration.nix
        ];
      };
    };
}